{
  "workflow": {
    "unique_name": "definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp",
    "name": "Umbrella Brand Watch New",
    "title": "Umbrella Brand Watch New",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "1",
          "scope": "input",
          "name": "DAYS TO SEARCH:",
          "type": "datatype.string",
          "description": "e.g.: 1",
          "is_required": true
        },
        "unique_name": "variable_workflow_01JPST5PRW96D38NkOiZdU2DYnxgDR03Iss",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "cisco.com",
          "scope": "input",
          "name": "DOMAINS TO EXCLUDE:",
          "type": "datatype.string",
          "description": "Exclude your known safe and non-imposter domains (comma separated), example: domain1.com,domain2.com",
          "is_required": false
        },
        "unique_name": "variable_workflow_01JPSU5EUOU170GRRIbEXSIBHowndeBbVPp",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 100,
          "scope": "local",
          "name": "maxResults",
          "type": "datatype.integer",
          "is_required": false
        },
        "unique_name": "variable_workflow_01JPSY7HN4J8Z5P4OvWmsZxGfZeldfl3mcK",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "result",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "*****",
          "scope": "input",
          "name": "INVESTIGATE API KEY:",
          "type": "datatype.secure_string",
          "description": "Please enter your Umbrella Investigate API key.",
          "is_required": true
        },
        "unique_name": "variable_workflow_01JRICFJ5M9B15ptaOmIjMvvNN9N5NbFdmi",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "*****",
          "scope": "input",
          "name": "WEBEX TEAMS API KEY:",
          "type": "datatype.secure_string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01JRICN4X2UC23r0oYnFL9FNKNJvfFzBgx6",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "<webex-room-id-here>",
          "scope": "input",
          "name": "WEBEX ROOM ID:",
          "type": "datatype.string",
          "description": "Please enter the ID of the Webex Room of where you want to send the results to.",
          "is_required": false
        },
        "unique_name": "variable_workflow_01JRIKQKWFSUF7C5tpYAP9k3f85r1FiqsUy",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Cisco",
          "scope": "input",
          "name": "BRAND NAME: ",
          "type": "datatype.string",
          "description": "Please enter your brand domain. E.,g.: Cisco",
          "is_required": true
        },
        "unique_name": "variable_workflow_01JMKNDGSQUKK0Sc4mE5lOfOfzpoMoPLXS0",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "This is a workflow that can search for automating imposter domain discovery. Please enter the domain of your brand (e.g. cisco.com), and please also add the Umbrella Investigate key to do the lookup. \n\nOptionally you can add a Webex Teams API key and a Webex Room ID to send results to.\n\nIt is recommended to enable the trigger so that the workflow runs every morning at 7AM. The investigate API will be queried for the past 24 hours per default, but both the trigger and the interval can be adjusted. ",
      "display_name": "Umbrella Brand Watch New",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "execute_on_target_group": false,
        "execute_on_workflow_target": false,
        "no_target": true,
        "specify_on_workflow_start": false
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01JMJ9K44IL5E45ShrOUyBymln9a2RusHxc",
        "name": "Execute Python Script",
        "title": "Generate Brand Regex",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Generate Brand Regex",
          "script": "\"\"\"\nLeet.py\n@brad_anton\nInspired by of this LeetSpeek generator:\nhttps://github.com/floft/leetspeak/blob/master/LeetSpeak.py\n\"\"\"\nimport sys,json\n\nclass Leet:\n    def __init__(self, word=None):\n        if word is None:\n            raise exception('No word provided')\n        self.word = word\n\n        self.a=['a','4']\n        self.b=['b','8','6']\n        self.c=['c','k']\n        self.d=['d','0']\n        self.e=['e','3']\n        self.f=['f']\n        self.g=['g','6','9']\n        self.h=['h']\n        self.i=['i','!','1','|','l']\n        self.j=['j']\n        self.k=['k','x']\n        self.l=['l','1','7']\n        self.m=['m','nn']\n        self.n=['n']\n        self.o=['o','0']\n        self.p=['p','9','q']\n        self.q=['q','9']\n        self.r=['r']\n        self.s=['s','5','z','es','2']\n        self.t=['t','7','1']\n        self.u=['u','m']\n        self.v=['v']\n        self.w=['w','vv']\n        self.x=['x','ex']\n        self.y=['y','j']\n        self.z=['z','2']\n        self.zero=['0','o']\n        self.one=['1','l']\n        self.two=['two','2','z']\n        self.three=['e','3','three']\n        self.four=['4','four','for','fore','a']\n        self.five=['5','five','s']\n        self.six=['6','six','g']\n        self.seven=['7','seven','t','l']\n        self.eight=['8','eight','b']\n        self.nine=['9','nine','g']\n        \n        self.alphabet={ 'a':self.a, 'b':self.b, 'c':self.c, \n                'd':self.d, 'e':self.e, 'f':self.f, 'g':self.g, \n                'h':self.h, 'i':self.i, 'j':self.j, 'k':self.k, \n                'l':self.l, 'm':self.m, 'n':self.n, 'o':self.o, \n                'p':self.p, 'q':self.q, 'r':self.r, 's':self.s, \n                't':self.t, 'u':self.u, 'v':self.v, 'w':self.w, \n                'x':self.x, 'y':self.y, 'z':self.z, '0':self.zero,\n                '1':self.one,'2':self.two,'3':self.three,'4':self.four,\n                '5':self.five,'6':self.six,'7':self.seven,'8':self.eight,\n                '9':self.nine }\n\n    def get_permutations(self, letter):\n        try:\n            permutations = self.alphabet[letter]\n        except KeyError:\n            permutations = letter\n        regex = '['\n        for p in permutations[:-1]:\n            regex += '{0}|'.format(p)\n        regex += '{0}]'.format(permutations[-1])\n\n        return regex\n\n    def get_regex(self):\n        result = '.*'\n        for letter in self.word:\n            result += self.get_permutations(letter) \n        result += '.*'\n        return result\n\n    def get_regex_duplicate(self):\n        result = '.*'\n        length = len(self.word)\n        duplicate = False \n        for i in range(length):\n            if i == 0:\n                result += self.get_permutations(self.word[i])\n            elif self.word[i] == self.word[i-1] and not duplicate:\n                duplicate = True\n                result += '+'\n            elif self.word[i] != self.word[i-1]:\n                duplicate = False\n                result += self.get_permutations(self.word[i])\n        result += '.*'\n        return result\n\n\n\nbrandname = sys.argv[2]\nl = Leet(brandname)\nbrandregex = l.get_regex_duplicate()",
          "script_arguments": [
            "",
            "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JMKNDGSQUKK0Sc4mE5lOfOfzpoMoPLXS0$"
          ],
          "script_queries": [
            {
              "script_query": "brandregex",
              "script_query_name": "brandregex",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01JPT0E8PNFDQ3dtZG8dYjDVRohwfXdGZUB",
        "name": "Split String",
        "title": "Populate Domains to Exclude",
        "type": "core.splitstring",
        "base_type": "activity",
        "properties": {
          "boundaries": [
            {
              "boundary": ","
            }
          ],
          "continue_on_failure": false,
          "display_name": "Populate Domains to Exclude",
          "input_string": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JPSU5EUOU170GRRIbEXSIBHowndeBbVPp$",
          "remove_empty": true,
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01JMKAH79TSXF429MOew16AwF8jpRcChaay",
        "name": "HTTP Request",
        "title": "Umbrella Pattern Search",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "content_type": "application/json",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $global.variable_01JPXLDT4V1D50rW1bnUPq1muS2hM3dJx7t.global.variable_01JPXLDT4V1D50rW1bnUPq1muS2hM3dJx7t$"
            }
          ],
          "display_name": "Umbrella Pattern Search",
          "method": "GET",
          "relative_url": "/search/$activity.definition_activity_01JMJ9K44IL5E45ShrOUyBymln9a2RusHxc.output.script_queries.brandregex$?start=-$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JPST5PRW96D38NkOiZdU2DYnxgDR03Iss$days&limit=$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.local.variable_workflow_01JPSY7HN4J8Z5P4OvWmsZxGfZeldfl3mcK$&includeCategory=true",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": "definition_target_01JMKA937I4DC5t8swpn8MTTqmqZwC7wQa1"
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01JPU8C3I5WDU79OBVxe8DIP1L0hAh9JA3c",
        "name": "Condition Block",
        "title": "Umbrella API Result",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Umbrella API Result",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01JPU8CHSS31V1P0bO0xAW8FUGfw7khMKzG",
            "name": "Condition Branch",
            "title": "Api Success",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01JMKAH79TSXF429MOew16AwF8jpRcChaay.output.status_code$",
                "operator": "eq",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "Api Success",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01JPVTCPXBC6V69xOpHx9EDhorn7fQZIAdW",
                "name": "Read Table from JSON",
                "title": "Read Domains",
                "type": "corejava.read_table_from_json",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Read Domains",
                  "input_json": "$activity.definition_activity_01JMKAH79TSXF429MOew16AwF8jpRcChaay.output.response_body$",
                  "jsonpath_query": "$.matches",
                  "persist_output": false,
                  "populate_columns": false,
                  "skip_execution": false,
                  "table_columns": [
                    {
                      "column_name": "name",
                      "column_type": "string"
                    },
                    {
                      "column_name": "firstSeenISO",
                      "column_type": "string"
                    },
                    {
                      "column_name": "securityCategories",
                      "column_type": "string"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01JRIUAQQ9AVH1X5dMJPurpvvdWioY3ViIm",
                "name": "Condition Block",
                "title": "EXCLUSIONS ADDED?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "EXCLUSIONS ADDED?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01JRIUB54GFFK3uQU1x3s4aztGxhpd4pqpM",
                    "name": "Condition Branch",
                    "title": "EXCLUSIONS ADDED",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JPSU5EUOU170GRRIbEXSIBHowndeBbVPp$",
                        "operator": "ne",
                        "right_operand": ""
                      },
                      "continue_on_failure": false,
                      "display_name": "EXCLUSIONS ADDED",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01JPVRE67R2GG0c6EWzG7Q6yB49afJNBs1j",
                        "name": "For Each",
                        "title": "Loop through Domains",
                        "type": "logic.for_each",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Loop through Domains",
                          "skip_execution": false,
                          "source_array": "$activity.definition_activity_01JPVTCPXBC6V69xOpHx9EDhorn7fQZIAdW.output.read_table_from_json$"
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_01JPW13816QJM2E8lOmn1bs8I3qefIDNS0g",
                            "name": "For Each",
                            "title": "Loop Through Exclusions",
                            "type": "logic.for_each",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Loop Through Exclusions",
                              "skip_execution": false,
                              "source_array": "$activity.definition_activity_01JPT0E8PNFDQ3dtZG8dYjDVRohwfXdGZUB.output.parts$"
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01JPVYQ989RUC2mL4xDFtLneWHN0ncM4GhN",
                                "name": "Condition Block",
                                "title": "Does Domain match Exclusion?",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Does Domain match Exclusion?",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_01JPVYQHHVIM04GUINhrBsMdrGS0DOF1q08",
                                    "name": "Condition Branch",
                                    "title": "To be excluded",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_01JPVRE67R2GG0c6EWzG7Q6yB49afJNBs1j.input.source_array[@].name$",
                                        "operator": "mregex",
                                        "right_operand": ".*$activity.definition_activity_01JPW13816QJM2E8lOmn1bs8I3qefIDNS0g.input.source_array[@]$$"
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "To be excluded",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_01JPW5VL6G0CU4Jei6YU1aTIpBJpRpyaRit",
                                        "name": "Continue",
                                        "title": "Continue",
                                        "type": "logic.continue",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "display_name": "Continue",
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_01JPWFE1B03Z56NtWzdPQ6Ufjjo4MePBMoY",
                                    "name": "Condition Branch",
                                    "title": "To be reported",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$activity.definition_activity_01JPVRE67R2GG0c6EWzG7Q6yB49afJNBs1j.input.source_array[@].name$",
                                        "operator": "ne",
                                        "right_operand": "\"\""
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "To be reported",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_01JQKRSO9UMO11qVqI6N3cI7LmahG7mVU4v",
                                        "name": "Replace String",
                                        "title": "Remove Quotes",
                                        "type": "core.replacestring",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "display_name": "Remove Quotes",
                                          "input_string": "$activity.definition_activity_01JPVRE67R2GG0c6EWzG7Q6yB49afJNBs1j.input.source_array[@].securityCategories$",
                                          "replace_list": [
                                            {
                                              "replaced_string": "\"",
                                              "replacement_string": ""
                                            },
                                            {
                                              "replaced_string": "[",
                                              "replacement_string": ""
                                            },
                                            {
                                              "replaced_string": "]",
                                              "replacement_string": ""
                                            }
                                          ],
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_01JPXO51SMGCV2Zz4MYenx9EcsyQVDoSu5I",
                                        "name": "Set Variables",
                                        "title": "Update Result",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "display_name": "Update Result",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.output.variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr$",
                                              "variable_value_new": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.output.variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr$<br>$activity.definition_activity_01JPVRE67R2GG0c6EWzG7Q6yB49afJNBs1j.input.source_array[@].name$ - First Seen: $activity.definition_activity_01JPVRE67R2GG0c6EWzG7Q6yB49afJNBs1j.input.source_array[@].firstSeenISO$ - Categories: $activity.definition_activity_01JQKRSO9UMO11qVqI6N3cI7LmahG7mVU4v.output.result_string$<br>"
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01JRIW8TDHK5S315pSWM4T3IkjzYbHrnSje",
                    "name": "Condition Branch",
                    "title": "NO EXCLUSIONS",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JPSU5EUOU170GRRIbEXSIBHowndeBbVPp$",
                        "operator": "eq",
                        "right_operand": ""
                      },
                      "continue_on_failure": false,
                      "display_name": "NO EXCLUSIONS",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01JRJ9S1MV9DO30mX8OYPDFxUSaQBv2yhWl",
                        "name": "For Each",
                        "title": "Loop through Domains",
                        "type": "logic.for_each",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Loop through Domains",
                          "skip_execution": false,
                          "source_array": "$activity.definition_activity_01JPVTCPXBC6V69xOpHx9EDhorn7fQZIAdW.output.read_table_from_json$"
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_01JRIX5H2RU5M0gS937kp8YURz3S5BIhH4i",
                            "name": "Replace String",
                            "title": "Remove Quotes",
                            "type": "core.replacestring",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Remove Quotes",
                              "input_string": "$activity.definition_activity_01JRJ9S1MV9DO30mX8OYPDFxUSaQBv2yhWl.input.source_array[@].securityCategories$",
                              "replace_list": [
                                {
                                  "replaced_string": "\"",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "[",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "]",
                                  "replacement_string": ""
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_01JRIXK9QTJZV7Vp1i7YaxQDOMw0N2P3ZDk",
                            "name": "Set Variables",
                            "title": "Update Result",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Update Result",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.output.variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr$",
                                  "variable_value_new": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.output.variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr$<br>$activity.definition_activity_01JRJ9S1MV9DO30mX8OYPDFxUSaQBv2yhWl.input.source_array[@].name$ - First Seen: $activity.definition_activity_01JRJ9S1MV9DO30mX8OYPDFxUSaQBv2yhWl.input.source_array[@].firstSeenISO$ - Categories: $activity.definition_activity_01JRIX5H2RU5M0gS937kp8YURz3S5BIhH4i.output.result_string$<br>"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01JRJC924I1JV54BpvEh7zkh40NvbLlhnwQ",
                "name": "Condition Block",
                "title": "RESULTS?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "RESULTS?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01JRJC9GCVHYS7b2x4V9HCxeLzEEvSjLg0o",
                    "name": "Condition Branch",
                    "title": "RESULTS RETURNED",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.output.variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr$",
                        "operator": "ne",
                        "right_operand": ""
                      },
                      "continue_on_failure": false,
                      "display_name": "RESULTS RETURNED",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01JRIE57ZGXSR7lafpimzSB55WOBKzvXMjt",
                        "name": "Webex Teams - Post Message to Room",
                        "title": "Webex Teams - Post Message to Room",
                        "type": "workflow.atomic_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": true,
                          "display_name": "Webex Teams - Post Message to Room",
                          "input": {
                            "variable_workflow_01FGYY44G3MZ55amJu9YqgUeKS8GT49bZx3": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JRICN4X2UC23r0oYnFL9FNKNJvfFzBgx6$",
                            "variable_workflow_01FGYY44G3TK951Crpnd8g2izonyM4bFtpW": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JRIKQKWFSUF7C5tpYAP9k3f85r1FiqsUy$",
                            "variable_workflow_01FGYY44G3UPV3heGGc3vXCV47YL5WoI2X6": "",
                            "variable_workflow_01FGYZ9BV4QTP19CuMwcW8QywvCP9ymx2BZ": "**The following domains were found to match $workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.input.variable_workflow_01JMKNDGSQUKK0Sc4mE5lOfOfzpoMoPLXS0$:**<br><br>$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.output.variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr$"
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "override_workflow_target": true,
                            "target_id": "definition_target_01G9UGF18RL9E08ziyLuERwNvdLp5Y7JqZ1",
                            "target_type": "web-service.endpoint"
                          },
                          "workflow_id": "definition_workflow_01FGYY44YU521254ygN3Le0In0kEHpiPNpf"
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_01JPU8CIZQUE65Sn1MSd8jmRUB8VjhH0KlE",
            "name": "Condition Branch",
            "title": "API Failed",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01JMKAH79TSXF429MOew16AwF8jpRcChaay.output.status_code$",
                "operator": "ne",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "API Failed",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01JPU8LD7J1X03Rivvwxjg8M69BIctf3uz9",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "result_message": "API Query Failed",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01JQKLGA3W5DY2usRhW8EOFoBtfgPaYGFzv",
        "name": "Completed",
        "title": "Success",
        "type": "logic.completed",
        "base_type": "activity",
        "properties": {
          "completion_type": "succeeded",
          "continue_on_failure": false,
          "display_name": "Success",
          "result_message": "$workflow.definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp.output.variable_workflow_01JPXNWRUWPPA6LIpczrxKp44qngzYTRLHr$",
          "skip_execution": false
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "triggers": {
    "triggerschedule_01JRJSRUFID8Z2NyG7YjSEZpu2yT2Ym8VJ5": {
      "workflow_id": "definition_workflow_01JMJ9DGKOUE14FuDI3iSliM1Ph7u7S60Jp",
      "name": "Every Day",
      "title": "",
      "lowercase_name": "schedule.every_day",
      "type": "schedule",
      "base_type": "trigger",
      "ref_id": "schedule_01JRJSN5TREBT730gJxpaNNI0ttodAs2oS1",
      "version": "1.0.0",
      "disabled": true,
      "unique_name": "triggerschedule_01JRJSRUFID8Z2NyG7YjSEZpu2yT2Ym8VJ5",
      "object_type": "triggerschedule"
    }
  },
  "schedules": {
    "schedule_01JRJSN5TREBT730gJxpaNNI0ttodAs2oS1": {
      "unique_name": "schedule_01JRJSN5TREBT730gJxpaNNI0ttodAs2oS1",
      "name": "Every Day",
      "type": "basic.schedule",
      "base_type": "schedule",
      "properties": {
        "calendar": "calendar_recurring_1BMfMWvgiDhSjBQ7hTSyvz3NyVZ",
        "timezone": "Etc/GMT+0",
        "starttime": "07:00",
        "interval_hours": 0,
        "interval_minutes": 0,
        "number_of_times": 1,
        "display_name": "Every Day",
        "description": ""
      },
      "version": "1.0.0",
      "object_type": "schedule"
    }
  },
  "targets": {
    "definition_target_01G9UGF18RL9E08ziyLuERwNvdLp5Y7JqZ1": {
      "unique_name": "definition_target_01G9UGF18RL9E08ziyLuERwNvdLp5Y7JqZ1",
      "name": "Webex Teams",
      "title": "Webex Teams",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "description": "Webex Teams",
        "disable_certificate_validation": false,
        "display_name": "Webex Teams",
        "host": "webexapis.com",
        "no_runtime_user": true,
        "port": 443,
        "protocol": "https"
      }
    },
    "definition_target_01JMKA937I4DC5t8swpn8MTTqmqZwC7wQa1": {
      "unique_name": "definition_target_01JMKA937I4DC5t8swpn8MTTqmqZwC7wQa1",
      "name": "Umbrella Investigate Target",
      "title": "Umbrella Investigate Target",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": false,
        "display_name": "Umbrella Investigate Target",
        "host": "investigate.api.umbrella.com",
        "ignore_proxy": false,
        "no_runtime_user": true,
        "protocol": "https"
      }
    }
  },
  "variables": {
    "variable_01JPXLDT4V1D50rW1bnUPq1muS2hM3dJx7t": {
      "unique_name": "variable_01JPXLDT4V1D50rW1bnUPq1muS2hM3dJx7t",
      "properties": {
        "value": "ef6ee8f5-ee18-4b50-82a3-e960aa98f1ea",
        "scope": "global",
        "name": "Umbrella Investigate API Key",
        "type": "datatype.string",
        "is_required": false
      },
      "object_type": "variable"
    }
  },
  "atomic_workflows": [
    "definition_workflow_01FGYY44YU521254ygN3Le0In0kEHpiPNpf"
  ]
}
